syntax = "proto3";

package meshtastic;

option csharp_namespace = "Meshtastic.Protobufs";
option go_package = "github.com/meshtastic/go/generated";
option java_outer_classname = "CoTProtos";
option java_package = "com.geeksville.mesh";
option swift_prefix = "";

import "meshtastic/cot_event_descriptors.proto";

message CotEvent {
    /*  
     * eg. a-f-G-U-C
     */
    oneof Type {
        /*
         * a - Things
         */
        Atoms Atoms = 1;
        /*
         * b - Meta information about data sources.
         */
        Bits Bits = 2;
        /*
         * r - Reservation/Restriction/References
         */
        Reservation Reservation = 3;
        /*
         * t - Tasking (requests/orders)
         */
        Tasking Tasking = 4;
        /*
         * c - Capability (applied to an area)
         */
        Capability Capability = 5;
    }
    /*
     * 128-bit representation of uuid?
     * FIXME: Look into unishox2 compressed string as alternative
     */
    optional bytes Uid = 6;
    /*
     * Starts at (unix epoch)
     */
    optional fixed32 SendTime = 7;
    /*
     * Becomes effective at (unix epoch)
     */
    optional fixed32 StartTime = 8;
    /*
     * Becomes stale at (unix epoch)
     */
    optional fixed32 StaleTime = 9;
    /*
     * Point position
     */
    optional Point Point = 10;
    /*
     * CoT event details
     */
    optional Detail Detail = 11;
    /*
     * FIXME: Give it a structure like Describes?
     */
    optional string How = 12;
}
/*
 * Details of CoT event
 */
message Detail {
    /*
     * Status of EUD
     */
    optional Status Status = 1;
    /*
     * Track
     */
    optional Track Track = 2;
}
/*
 * EUD status
 */
message Status {
    /*
     * Battery level (percent)
     */
    optional uint32 Battery = 1;
}
/*
 * Track
 */
message Track {
}
/*
 * Position of the CoT event
 */
message Point {
    /*
     * Latitude - Multiply by 1e-7 to get in floating point
     */
    optional sfixed32 Latitude = 1;
    /*
     * Longitude - Multiply by 1e-7 to get in floating point
     */
    optional sfixed32 Longitude = 2;
    /*
     * Height above ellipsoid
     */
    optional int32 HAE = 3;
    /*
     * Cirular error
     */
    optional int32 CircularError = 4;
    /*
     * Linear Error
     */
    optional int32 LinearError = 5;
}